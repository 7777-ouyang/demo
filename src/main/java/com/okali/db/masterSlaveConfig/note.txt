第一步：
定义切库注解类：
RoutingDataSource

第二步：
定义需要使用的数据库配置
这里使用的是application-masterSlaveDB.properties
application.properties

第三步：
定义支持的数据源id
DataSources

第四步：
定义数据库实体类并配置为多数据源形式，分别扫描不同的数据库配置创建不同的数据源
DataSourceConfig

第五步：
配置成动态数据源，扫描对应mybatis的dao包
MybatisConfig

第六步：
使用ThreadLocal安全管理当前进程使用的数据库，分别定义set以及get/remove方法对数据源进行切换
DataSourceContextHolder

第七步：
完善配置动态数据源MybatisConfig类

第八步：
获取包中含有@RoutingDataSource注解的方法，并进行数据库类型设置
DynamicDataSourceAspect

第九步：
动态的取出我们在切面里设置的数据源字符串即可
DynamicDataSource继承了AbstractRoutingDataSource,并重写内部方法，获取到对应的数据源字符串
