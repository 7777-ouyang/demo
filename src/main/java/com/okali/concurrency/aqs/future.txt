先说Future。Executor是Runnable和Callable的调度容器，Future是对于具体的Runnable或者Callable任务的执行结果进行取消、查询是否完成、获取结果、设置结果操作。其实很好用。

而FutureTask呢，是一个RunnableFuture< V>，而RunnableFuture实现了Runnbale又实现了Futrue< V>这两个接口，他还可以包装Runnable和Callable< V>，看他的构造函数，可以知道Runnable注入会被Executors.callable()函数转换为Callable类型，即FutureTask最终都是执行Callable类型的任务，具体可以看callable（）方法和 RunnableAdapter适配器。由于FutureTask实现了Runnable，因此它既可以通过Thread包装来直接执行，也可以提交给ExecuteService来执行。并且还可以直接通过get()函数获取执行结果，该函数会阻塞，直到结果返回。因此FutureTask既是Future、Runnable，又是包装了Callable(如果是Runnable最终也会被转换为Callable )， 它是这两者的合体。

课程里的例子不是为了表达相比Future的写法好在哪里，而是给出另外的用法。可以根据实际需要选择不同的写法。Future、Runnable、Callable支持的，FutureTask都能满足。